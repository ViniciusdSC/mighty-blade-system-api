// Code generated by mockery v2.36.0. DO NOT EDIT.

package handlers

import (
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// MockItemHandler is an autogenerated mock type for the ItemHandler type
type MockItemHandler struct {
	mock.Mock
}

type MockItemHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockItemHandler) EXPECT() *MockItemHandler_Expecter {
	return &MockItemHandler_Expecter{mock: &_m.Mock}
}

// Route provides a mock function with given fields: r
func (_m *MockItemHandler) Route(r *gin.Engine) {
	_m.Called(r)
}

// MockItemHandler_Route_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Route'
type MockItemHandler_Route_Call struct {
	*mock.Call
}

// Route is a helper method to define mock.On call
//   - r *gin.Engine
func (_e *MockItemHandler_Expecter) Route(r interface{}) *MockItemHandler_Route_Call {
	return &MockItemHandler_Route_Call{Call: _e.mock.On("Route", r)}
}

func (_c *MockItemHandler_Route_Call) Run(run func(r *gin.Engine)) *MockItemHandler_Route_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Engine))
	})
	return _c
}

func (_c *MockItemHandler_Route_Call) Return() *MockItemHandler_Route_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockItemHandler_Route_Call) RunAndReturn(run func(*gin.Engine)) *MockItemHandler_Route_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockItemHandler creates a new instance of MockItemHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockItemHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockItemHandler {
	mock := &MockItemHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
