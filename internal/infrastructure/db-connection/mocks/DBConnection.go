// Code generated by mockery v2.36.0. DO NOT EDIT.

package dbconnection

import (
	dbconnection "github.com/ViniciusdSC/mighty-blade-system-api/internal/infrastructure/db-connection"
	mock "github.com/stretchr/testify/mock"
)

// MockDBConnection is an autogenerated mock type for the DBConnection type
type MockDBConnection struct {
	mock.Mock
}

type MockDBConnection_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDBConnection) EXPECT() *MockDBConnection_Expecter {
	return &MockDBConnection_Expecter{mock: &_m.Mock}
}

// CreateConnection provides a mock function with given fields:
func (_m *MockDBConnection) CreateConnection() (dbconnection.GormDB, error) {
	ret := _m.Called()

	var r0 dbconnection.GormDB
	var r1 error
	if rf, ok := ret.Get(0).(func() (dbconnection.GormDB, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() dbconnection.GormDB); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(dbconnection.GormDB)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockDBConnection_CreateConnection_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateConnection'
type MockDBConnection_CreateConnection_Call struct {
	*mock.Call
}

// CreateConnection is a helper method to define mock.On call
func (_e *MockDBConnection_Expecter) CreateConnection() *MockDBConnection_CreateConnection_Call {
	return &MockDBConnection_CreateConnection_Call{Call: _e.mock.On("CreateConnection")}
}

func (_c *MockDBConnection_CreateConnection_Call) Run(run func()) *MockDBConnection_CreateConnection_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDBConnection_CreateConnection_Call) Return(_a0 dbconnection.GormDB, _a1 error) *MockDBConnection_CreateConnection_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockDBConnection_CreateConnection_Call) RunAndReturn(run func() (dbconnection.GormDB, error)) *MockDBConnection_CreateConnection_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockDBConnection creates a new instance of MockDBConnection. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDBConnection(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDBConnection {
	mock := &MockDBConnection{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
